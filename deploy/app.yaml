apiVersion: v1
kind: Service
metadata:
  name: graph
  namespace: flux-system
spec:
  type: ClusterIP
  selector:
    app: graph
  ports:
  - name: http
    port: 80
    targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graph
  namespace: flux-system
spec:
  selector:
    matchLabels:
      app: graph
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: graph
    spec:
      imagePullSecrets:
      - name: regcred
      initContainers:
      - name: graph-init-migrate
        image: ghcr.io/pokernook/graph:0.0.2 # {"$imagepolicy": "flux-system:graph"}
        command:
        - npm
        - run
        - prisma:migrate:deploy
        - --
        - --schema=dist/schema.prisma
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: graph-secrets
              key: postgres-url
      containers:
      - name: graph
        image: ghcr.io/pokernook/graph:0.0.2 # {"$imagepolicy": "flux-system:graph"}
        env:
        - name: APP_SECRET
          valueFrom:
            secretKeyRef:
              name: graph-secrets
              key: app-secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: graph-secrets
              key: postgres-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: graph-secrets
              key: redis-url
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: graph-config
              key: node-env
        - name: PORT
          value: "4000"
        resources:
          limits:
            memory: 64Mi
            cpu: 200m
        ports:
        - name: http
          containerPort: 4000
