### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  user: User
}

type Mutation {
  logIn(email: String!, password: String!): AuthPayload
  signUp(email: String!, password: String!, username: String!): AuthPayload
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users(cursor: UserWhereUniqueInput, skip: Int, take: Int): [User!]!
}

type User {
  discriminator: Int!
  email: String!
  id: String!
  username: String!
}

input UserTagCompoundUniqueInput {
  discriminator: Int!
  username: String!
}

input UserWhereUniqueInput {
  email: String
  id: String
  UserTag: UserTagCompoundUniqueInput
}
